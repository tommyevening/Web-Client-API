package test;

import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;
import javafx.scene.web.WebEngine;
import javafx.scene.web.WebView;
import javafx.stage.Stage;
import zad1.Service;

public class AppGUI extends Application {
    private static Service weatherService;
    private WebView webView;
    private WebEngine webEngine;

    public static void initService(Service service) {
        weatherService = service;
    }

    @Override
    public void init() throws Exception {
        super.init();
        // Any additional initialization if needed
    }

    @Override
    public void start(Stage primaryStage) {
        try {
            primaryStage.setTitle("Weather and Currency Information");

            // Create main layout
            GridPane grid = new GridPane();
            grid.setAlignment(Pos.CENTER);
            grid.setHgap(10);
            grid.setVgap(10);
            grid.setPadding(new Insets(25, 25, 25, 25));

            // Input fields
            TextField cityField = new TextField();
            cityField.setPromptText("Enter city");
            TextField countryField = new TextField();
            countryField.setPromptText("Enter country");
            TextField currencyField = new TextField();
            currencyField.setPromptText("Enter target currency (e.g., USD)");

            // Results area
            TextArea weatherResult = new TextArea();
            weatherResult.setEditable(false);
            weatherResult.setPrefRowCount(3);
            weatherResult.setWrapText(true);

            Label exchangeRateLabel = new Label();
            Label nbpRateLabel = new Label();

            // Web view for Wikipedia
            webView = new WebView();
            webEngine = webView.getEngine();
            webView.setPrefSize(800, 400);

            // Button
            Button searchButton = new Button("Search");
            searchButton.setOnAction(e -> {
                try {
                    String city = cityField.getText().trim();
                    String weatherJson = weatherService.getWeather(city);
                    weatherResult.setText(weatherJson);

                    // Load Wikipedia page
                    String wikiUrl = "https://en.wikipedia.org/wiki/" + city;
                    webEngine.load(wikiUrl);
                } catch (Exception ex) {
                    weatherResult.setText("Error: " + ex.getMessage());
                }
            });

            // Add components to grid
            grid.add(new Label("City:"), 0, 0);
            grid.add(cityField, 1, 0);
            grid.add(new Label("Country:"), 0, 1);
            grid.add(countryField, 1, 1);
            grid.add(new Label("Target Currency:"), 0, 2);
            grid.add(currencyField, 1, 2);
            grid.add(searchButton, 1, 3);
            grid.add(new Label("Weather:"), 0, 4);
            grid.add(weatherResult, 0, 5, 2, 1);
            grid.add(exchangeRateLabel, 0, 6, 2, 1);
            grid.add(nbpRateLabel, 0, 7, 2, 1);
            grid.add(webView, 0, 8, 2, 1);

            Scene scene = new Scene(grid, 1000, 800);
            primaryStage.setScene(scene);
            primaryStage.show();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}